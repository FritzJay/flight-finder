{"version":3,"sources":["Redux/system.ts","Components/Flights/AirportSearchInput.tsx","Components/Flights/FlightsTable.tsx","API/queryFlights.ts","Redux/flights.ts","Components/Flights/Flights.tsx","Redux/information.ts","Components/Information/Information.tsx","Components/Confirmation/Confirmation.tsx","App.tsx","Redux/index.ts","index.tsx"],"names":["setStep","step","type","payload","initialState","AirportSearchInput","value","handleChange","label","React","useState","options","setOptions","loading","setLoading","queryForOptions","e","a","target","fetch","process","response","json","cities","list","forEach","Display","nearbyAirports","LocID","code","name","push","locID","city","Autocomplete","id","toLowerCase","replace","getOptionSelected","option","getOptionLabel","toLocaleUpperCase","freeSolo","clearOnEscape","onChange","event","newValue","groupBy","renderInput","params","TextField","required","variant","InputProps","endAdornment","Fragment","CircularProgress","color","size","descendingComparator","b","orderBy","headCells","numeric","columns","length","useStyles","makeStyles","theme","createStyles","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","width","selected","backgroundColor","palette","primary","light","contrastText","FlightsTable","data","selectedFlight","handleSelectFlight","classes","order","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","Typography","style","Table","aria-label","TableHead","TableRow","map","TableCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","className","TableBody","tabIndex","colSpan","textAlign","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","flight","hover","airline","cabin","grade","Math","floor","duration","stops","fare","toLocaleString","currency","minimumFractionDigits","TableFooter","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","queryFlights","from","to","date","timeStart","timeEnd","formatFlightQueryParameters","flights","airlineName","flightGrade","numStops","fares","segments","totalFare","seatsBySegment","itineraryFlights","reduce","acc","cur","substring","fromAirportCode","fromCode","toAirportCode","toCode","legs","formatFlightLegs","timeFilters","formatTimeFilters","toISOString","split","initialFlightsState","Date","now","timeRange","formatTime","time","Flights","dispatch","useDispatch","useSelector","state","handleToChange","airport","setTo","handleFromChange","setFrom","handleDateChange","setDate","handleTimeRangeChange","setTimeRange","setSelectedFlight","setFlights","useFlights","query","useCallback","Grid","container","spacing","justify","item","xs","sm","utils","DateFnsUtils","inputVariant","showTodayButton","alignItems","fontSize","Slider","min","max","marks","valueLabelDisplay","aria-labelledby","getAriaValueText","Button","disabled","initialInformationState","fName","lName","so","Information","information","handleFirstNameChange","handleLastNameChange","handleSOChange","useInformationPage","gutterBottom","fullWidth","autoComplete","Confirmation","rows","items","icon","AirplanemodeActive","tooltip","total","undefined","useConfirmation","Link","component","Tooltip","title","Chip","clickable","formatTotal","grandTotal","appBar","layout","marginLeft","marginRight","breakpoints","up","paper","marginTop","marginBottom","stepper","buttons","display","justifyContent","button","steps","App","system","handleNext","handleBack","useApp","CssBaseline","AppBar","Toolbar","noWrap","Paper","Stepper","activeStep","Step","StepLabel","Error","getStepContent","href","rootReducer","combineReducers","action","enhancer","compose","composeWithDevTools","persistState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36e4c8e5.chunk.js","sourcesContent":["import { ISystemState } from \"../interfaces\";\r\n\r\n/* Types */\r\n\r\nexport const SET_STEP = \"SET_STEP\";\r\n\r\ninterface SetStepAction {\r\n  type: typeof SET_STEP;\r\n  payload: number;\r\n}\r\n\r\nexport type SystemActionTypes = SetStepAction;\r\n\r\n/* Actions */\r\n\r\nexport const setStep = (step: number) => ({\r\n  type: SET_STEP,\r\n  payload: step\r\n});\r\n\r\n/* Reducer */\r\n\r\nconst initialState: ISystemState = {\r\n  step: 0\r\n};\r\n\r\nexport const systemReducer = (\r\n  state = initialState,\r\n  action: SystemActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_STEP:\r\n      return {\r\n        ...state,\r\n        step: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { IAirport } from \"../../interfaces\";\r\n\r\ninterface IResponse {\r\n  AirRank: number;\r\n  CarRank: number;\r\n  Display: string;\r\n  HotelRank: number;\r\n  KeyType: string;\r\n  LocID: string;\r\n  Word: string;\r\n  isCode: boolean;\r\n  isFirst: boolean;\r\n  nearbyAirports: [\r\n    {\r\n      code: string;\r\n      name: string;\r\n      isRail: boolean;\r\n    }\r\n  ];\r\n}\r\n\r\nconst AirportSearchInput = ({\r\n  value,\r\n  handleChange,\r\n  label\r\n}: {\r\n  value: IAirport | null;\r\n  handleChange: (value: IAirport | null) => void;\r\n  label: string;\r\n}) => {\r\n  const [options, setOptions] = React.useState<IAirport[]>([]);\r\n  const [loading, setLoading] = React.useState<boolean>(false);\r\n\r\n  const queryForOptions = async (e: any) => {\r\n    if (e.target.value === \"\") return;\r\n\r\n    setLoading(true);\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_API_URL}/airports?queryparams={\"searchString\":\"${e.target.value}\"}`\r\n    );\r\n    const cities: IResponse[] = await response.json();\r\n\r\n    const list: IAirport[] = [];\r\n\r\n    cities.forEach(({ Display, nearbyAirports, LocID }) => {\r\n      nearbyAirports?.forEach(({ code, name }) =>\r\n        list.push({\r\n          code,\r\n          name,\r\n          locID: LocID,\r\n          city: Display\r\n        })\r\n      );\r\n\r\n      setOptions([...list]);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Autocomplete\r\n      id={label.toLowerCase().replace(\" \", \"-\")}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={option =>\r\n        `${option.code.toLocaleUpperCase()} - ${option.name}`\r\n      }\r\n      freeSolo\r\n      clearOnEscape\r\n      value={value}\r\n      onChange={(event: any, newValue: IAirport | null) => {\r\n        handleChange(newValue);\r\n      }}\r\n      options={options}\r\n      loading={loading}\r\n      groupBy={option => option.city}\r\n      renderInput={params => (\r\n        <TextField\r\n          {...params}\r\n          label={label}\r\n          required\r\n          variant=\"outlined\"\r\n          onChange={queryForOptions}\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? (\r\n                  <CircularProgress color=\"inherit\" size={20} />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AirportSearchInput;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  TableContainer,\r\n  TablePagination,\r\n  Table,\r\n  TableBody,\r\n  TableFooter,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TableSortLabel,\r\n  Theme,\r\n  CircularProgress,\r\n  makeStyles,\r\n  createStyles\r\n} from \"@material-ui/core\";\r\nimport { IFlight } from \"../../interfaces\";\r\n\r\n/* Sorting */\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\ntype Order = \"asc\" | \"desc\";\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n  order: Order,\r\n  orderBy: Key\r\n): (\r\n  a: { [key in Key]: number | string },\r\n  b: { [key in Key]: number | string }\r\n) => number {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\n/* Table Header */\r\ninterface IHeadCell {\r\n  id: keyof IFlight;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: IHeadCell[] = [\r\n  { id: \"airline\", numeric: false, label: \"Airline\" },\r\n  { id: \"cabin\", numeric: false, label: \"Cabin\" },\r\n  { id: \"grade\", numeric: false, label: \"Grade\" },\r\n  { id: \"duration\", numeric: false, label: \"Duration\" },\r\n  { id: \"stops\", numeric: true, label: \"Stops\" },\r\n  { id: \"fare\", numeric: true, label: \"Fare\" }\r\n];\r\n\r\nconst columns = headCells.length;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: \"rect(0 0 0 0)\",\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: \"hidden\",\r\n      padding: 0,\r\n      position: \"absolute\",\r\n      top: 20,\r\n      width: 1\r\n    },\r\n    selected: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      color: theme.palette.primary.contrastText\r\n    }\r\n  })\r\n);\r\n\r\nconst FlightsTable = ({\r\n  data,\r\n  loading,\r\n  selectedFlight,\r\n  handleSelectFlight\r\n}: {\r\n  data: IFlight[];\r\n  loading: boolean;\r\n  selectedFlight: IFlight | null;\r\n  handleSelectFlight: (flight: IFlight | null) => void;\r\n}) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState<Order>(\"asc\");\r\n  const [orderBy, setOrderBy] = useState<keyof IFlight>(\"fare\");\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleRequestSort = (property: keyof IFlight) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) =>\r\n    setPage(newPage);\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Typography variant=\"h6\" style={{ margin: \"1rem 1rem 1rem 2rem\" }}>\r\n        Available Flights\r\n      </Typography>\r\n\r\n      <Table size=\"small\" aria-label=\"available flights\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {headCells.map(({ id, label, numeric }) => (\r\n              <TableCell\r\n                key={id}\r\n                align={numeric ? \"right\" : \"left\"}\r\n                sortDirection={orderBy === id ? order : false}\r\n              >\r\n                <TableSortLabel\r\n                  active={orderBy === id}\r\n                  direction={orderBy === id ? order : \"asc\"}\r\n                  onClick={() => handleRequestSort(id)}\r\n                >\r\n                  {label}\r\n                  {orderBy === id ? (\r\n                    <span className={classes.visuallyHidden}>\r\n                      {order === \"desc\"\r\n                        ? \"sorted descending\"\r\n                        : \"sorted ascending\"}\r\n                    </span>\r\n                  ) : null}\r\n                </TableSortLabel>\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {data.length === 0 && !loading && (\r\n            <TableRow tabIndex={-1}>\r\n              <TableCell colSpan={columns}>\r\n                There are no flights available at this time.\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n\r\n          {loading ? (\r\n            <TableRow>\r\n              <TableCell colSpan={columns} style={{ textAlign: \"center\" }}>\r\n                <CircularProgress size={36} />\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : (\r\n            stableSort(data, getComparator(order, orderBy))\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((flight: IFlight) => (\r\n                <TableRow\r\n                  hover={selectedFlight?.id !== flight.id}\r\n                  className={\r\n                    selectedFlight?.id === flight.id ? classes.selected : \"\"\r\n                  }\r\n                  onClick={() =>\r\n                    selectedFlight?.id === flight.id\r\n                      ? handleSelectFlight(null)\r\n                      : handleSelectFlight(flight)\r\n                  }\r\n                  tabIndex={-1}\r\n                  key={flight.id}\r\n                >\r\n                  <TableCell>{flight.airline}</TableCell>\r\n                  <TableCell align=\"left\">{flight.cabin}</TableCell>\r\n                  <TableCell align=\"left\">{flight.grade}</TableCell>\r\n                  <TableCell align=\"left\">{`${Math.floor(\r\n                    flight.duration / 60\r\n                  )}h ${flight.duration % 60}m`}</TableCell>\r\n                  <TableCell align=\"right\">{flight.stops}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {flight.fare.toLocaleString(\"en-US\", {\r\n                      style: \"currency\",\r\n                      currency: \"USD\",\r\n                      minimumFractionDigits: 2\r\n                    })}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              colSpan={columns}\r\n              count={data.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default FlightsTable;\r\n","import { IAirport, IFlight } from \"../interfaces\";\r\n\r\ninterface ILocation {\r\n  city?: any;\r\n  country?: any;\r\n  lat: number;\r\n  lon: number;\r\n  postalCode?: any;\r\n  region?: any;\r\n  street?: any;\r\n  code?: any;\r\n  isValid: boolean;\r\n  name?: any;\r\n  rgn?: any;\r\n  locId: string;\r\n  shortDisplay: string;\r\n  cityCode: string;\r\n}\r\n\r\ninterface IAirline {\r\n  code: string;\r\n  name: string;\r\n  fare: number;\r\n  isPreferred: boolean;\r\n  hasNonStop: boolean;\r\n}\r\n\r\ninterface IColumnBrand {\r\n  airlineCode: string;\r\n  brandId: number;\r\n  brandNum: number;\r\n  brandName: string;\r\n  extraColumns: number;\r\n  description: string;\r\n  fullDescription: string;\r\n  hasImage: boolean;\r\n  firstCheckedBag: string;\r\n  secondCheckedBag: string;\r\n  carryOnBag: string;\r\n  personalItem: string;\r\n  brandPerks: string[];\r\n  brandRestrictions: string[];\r\n  upgradeOffer: boolean;\r\n  upgradeOfferHeader: string;\r\n  upgradeOfferRestrictions: string[];\r\n  upgradeOfferBenefits: string[];\r\n}\r\n\r\ninterface IFlightBrand {\r\n  airlineCode: string;\r\n  brandId: number;\r\n  brandNum: number;\r\n  brandName: string;\r\n  extraColumns: number;\r\n  description: string;\r\n  fullDescription: string;\r\n  hasImage: boolean;\r\n  firstCheckedBag: string;\r\n  secondCheckedBag: string;\r\n  carryOnBag: string;\r\n  personalItem: string;\r\n  brandPerks: string[];\r\n  brandRestrictions: string[];\r\n  upgradeOffer: boolean;\r\n  upgradeOfferHeader: string;\r\n  upgradeOfferRestrictions: string[];\r\n  upgradeOfferBenefits: string[];\r\n}\r\n\r\ninterface ISeat {\r\n  route: string;\r\n  cabin: string;\r\n  cabinCode: string;\r\n  config: string;\r\n  num: number;\r\n  type: string;\r\n  pitchRate: string;\r\n  seatWidth: string;\r\n  width: number;\r\n  widthRate: string;\r\n  pitch: number;\r\n  seatPitch: string;\r\n}\r\n\r\ninterface IAvailability {\r\n  bic: string;\r\n  count: number;\r\n  cabin: string;\r\n}\r\n\r\ninterface IImage {\r\n  url: string;\r\n  cabin: string;\r\n  route: string;\r\n}\r\n\r\ninterface ISegment {\r\n  segNum: number;\r\n  fullSegNum: number;\r\n  sectorNum: number;\r\n  airlineCode: string;\r\n  airlineName: string;\r\n  allianceCode: string;\r\n  flightNumber: number;\r\n  fromCode: string;\r\n  fromName: string;\r\n  fromLocId?: any;\r\n  toCode: string;\r\n  toName: string;\r\n  toLocId?: any;\r\n  departs: string;\r\n  arrives: string;\r\n  dayChange: number;\r\n  opAirlineCode: string;\r\n  opAirlineName: string;\r\n  miles: number;\r\n  duration: number;\r\n  aircraftTypeCode: string;\r\n  aircraftTypeName: string;\r\n  aircraftTypeCategory: string;\r\n  fromTerminal: string;\r\n  toTerminal: string;\r\n  onTimePercent: number;\r\n  numStops: number;\r\n  planeChange: boolean;\r\n  isConnection: boolean;\r\n  isDelphiConnection: boolean;\r\n  connectionType?: any;\r\n  stopPoints: any[];\r\n  seats: ISeat[];\r\n  availability: IAvailability[];\r\n  seatText: string;\r\n  cabinSeatString: string;\r\n  cabinText: string;\r\n  seatBookingLevel: string;\r\n  brandNum: number;\r\n  brandId: number;\r\n  images: IImage[];\r\n}\r\n\r\ninterface ISegment2 {\r\n  duration: number;\r\n  flight: string;\r\n  status: string;\r\n  text: string;\r\n}\r\n\r\ninterface IAmenity {\r\n  code: number;\r\n  segments: ISegment2[];\r\n}\r\n\r\ninterface ISeatsBySegment {\r\n  route: string;\r\n  cabin: string;\r\n  cabinCode: string;\r\n  config: string;\r\n  num: number;\r\n  type: string;\r\n  pitchRate: string;\r\n  seatWidth: string;\r\n  width: number;\r\n  widthRate: string;\r\n  pitch: number;\r\n  seatPitch: string;\r\n}\r\n\r\ninterface IMedium {\r\n  url: string;\r\n  cabin: string;\r\n  route: string;\r\n}\r\n\r\ninterface IFare {\r\n  baseFare: number;\r\n  tax: number;\r\n  totalFare: number;\r\n  totalItinerary: number;\r\n  downgradeRequired: boolean;\r\n  notOfferedReason?: any;\r\n  soldOut: boolean;\r\n  specialRatePopup?: any;\r\n  specialRateText?: any;\r\n  bic: string;\r\n  fbc: string;\r\n  brandColumn: number;\r\n  brandIndex: number;\r\n  shelf: number;\r\n  grade: string;\r\n  amenities: IAmenity[];\r\n  split: string;\r\n  source: string;\r\n  itineraryFlights: string[];\r\n  outOfPolicy: boolean;\r\n  policyBreakDetails?: any;\r\n  rateType?: any;\r\n  refundable: boolean;\r\n  changeFee: string;\r\n  wifi: number;\r\n  ife: number;\r\n  liveTV: number;\r\n  power: number;\r\n  seatAssignments: number;\r\n  seatType: number;\r\n  seatWidth: string;\r\n  seatPitch: string;\r\n  boardingPriority: string;\r\n  seatsBySegment: ISeatsBySegment[];\r\n  media: IMedium[];\r\n  cabinClassCode: string;\r\n}\r\n\r\ninterface IFlightResponse {\r\n  airportOnly: boolean;\r\n  airlineCode: string;\r\n  airlineName: string;\r\n  flightGrade: string;\r\n  duration: number;\r\n  numStops: number;\r\n  segments: ISegment[];\r\n  fares: IFare[];\r\n  isPreferred: boolean;\r\n}\r\n\r\ninterface IAirportOption {\r\n  locId: string;\r\n  locIdName: string;\r\n  airports: IAirport[];\r\n}\r\n\r\ninterface IResponse {\r\n  fareDisplayType: string;\r\n  brandDisplayType: string;\r\n  showShelves: boolean;\r\n  allFlightsFilteredOut: boolean;\r\n  searchId: number;\r\n  statsId: number;\r\n  locations: ILocation[];\r\n  airlines: IAirline[];\r\n  columnBrands: IColumnBrand[];\r\n  flightBrands: IFlightBrand[];\r\n  flights: IFlightResponse[];\r\n  itineraries?: any;\r\n  selectedFlights?: any;\r\n  stopOptions: string[];\r\n  airportOptions: IAirportOption[];\r\n  unwantedAirports?: any;\r\n  policyApplied: number;\r\n  haveCustomerEmail: boolean;\r\n}\r\n\r\n// TODO: Accept array of flights\r\nexport const queryFlights = async (\r\n  from: IAirport,\r\n  to: IAirport,\r\n  date: Date,\r\n  timeStart: number,\r\n  timeEnd: number\r\n): Promise<IFlight[]> => {\r\n  const response = await fetch(\r\n    process.env.REACT_APP_API_URL +\r\n      `/flights?queryparams=${formatFlightQueryParameters(\r\n        from,\r\n        to,\r\n        date,\r\n        timeStart,\r\n        timeEnd\r\n      )}`\r\n  );\r\n  const json: IResponse = await response.json();\r\n\r\n  const list: IFlight[] = [];\r\n\r\n  json.flights.forEach(\r\n    ({ airlineName, flightGrade, duration, numStops, fares, segments }) =>\r\n      fares.forEach(({ totalFare, seatsBySegment, itineraryFlights }: IFare) =>\r\n        list.push({\r\n          id: itineraryFlights[0],\r\n          airline: airlineName,\r\n          grade: flightGrade,\r\n          duration,\r\n          stops: numStops,\r\n          fare: totalFare,\r\n          cabin: seatsBySegment\r\n            .reduce((acc, cur) => `${acc}/${cur.cabin}`, \"\")\r\n            .substring(1),\r\n          fromAirportCode: segments[0].fromCode,\r\n          toAirportCode: segments[segments.length - 1].toCode\r\n        })\r\n      )\r\n  );\r\n\r\n  return list;\r\n};\r\n\r\nexport const formatFlightQueryParameters = (\r\n  from: IAirport,\r\n  to: IAirport,\r\n  date: Date,\r\n  timeStart: number,\r\n  timeEnd: number\r\n) => {\r\n  const legs = formatFlightLegs(from, to, date);\r\n  const timeFilters = formatTimeFilters(timeStart, timeEnd);\r\n  return `{${legs},${timeFilters},\"airlineView\":\"DL\",\"legNum\":1}`;\r\n};\r\n\r\nexport const formatFlightLegs = (from: IAirport, to: IAirport, date: Date) =>\r\n  `\"legs\":[{\"date\":\"${date.toISOString().split(\"T\")[0]}\",` +\r\n  `\"fromLocId\":\"${from.locID}\",\"toLocId\":\"${to.locID}\"}]`;\r\n\r\nexport const formatTimeFilters = (timeStart: number, timeEnd: number) =>\r\n  `\"filters\":{\"timeFilters\":[{\"departFromTime\":\"${timeStart}\",\"departToTime\":\"${timeEnd}\"}]}`;\r\n\r\nexport default queryFlights;\r\n","import { IFlightsState, IAirport, IFlight } from \"../interfaces\";\r\n\r\n/* Types */\r\n\r\nexport const SET_FROM = \"SET_FROM\";\r\nexport const SET_TO = \"SET_TO\";\r\nexport const SET_DATE = \"SET_DATE\";\r\nexport const SET_TIME_RANGE = \"SET_TIME_RANGE\";\r\nexport const SET_FLIGHTS = \"SET_FLIGHTS\";\r\nexport const SET_SELECTED_FLIGHT = \"SET_SELECTED_FLIGHT\";\r\n\r\ninterface SetFromAction {\r\n  type: typeof SET_FROM;\r\n  payload: IAirport;\r\n}\r\n\r\ninterface SetToAction {\r\n  type: typeof SET_TO;\r\n  payload: IAirport;\r\n}\r\n\r\ninterface SetDateAction {\r\n  type: typeof SET_DATE;\r\n  payload: Date;\r\n}\r\n\r\ninterface SetTimeRangeAction {\r\n  type: typeof SET_TIME_RANGE;\r\n  payload: number[];\r\n}\r\n\r\ninterface SetFlights {\r\n  type: typeof SET_FLIGHTS;\r\n  payload: IFlight[];\r\n}\r\n\r\ninterface SetSelectedFlightAction {\r\n  type: typeof SET_SELECTED_FLIGHT;\r\n  payload: IFlight;\r\n}\r\n\r\nexport type FlightsActionType =\r\n  | SetFromAction\r\n  | SetToAction\r\n  | SetDateAction\r\n  | SetTimeRangeAction\r\n  | SetFlights\r\n  | SetSelectedFlightAction;\r\n\r\n/* Actions */\r\n\r\nexport const setFrom = (airport: IAirport | null) => ({\r\n  type: SET_FROM,\r\n  payload: airport\r\n});\r\n\r\nexport const setTo = (airport: IAirport | null) => ({\r\n  type: SET_TO,\r\n  payload: airport\r\n});\r\n\r\nexport const setDate = (date: Date | null) => ({\r\n  type: SET_DATE,\r\n  payload: date\r\n});\r\n\r\nexport const setTimeRange = (timeRange: number[]) => ({\r\n  type: SET_TIME_RANGE,\r\n  payload: timeRange\r\n});\r\n\r\nexport const setFlights = (flights: IFlight[]) => ({\r\n  type: SET_FLIGHTS,\r\n  payload: flights\r\n});\r\n\r\nexport const setSelectedFlight = (flight: IFlight | null) => ({\r\n  type: SET_SELECTED_FLIGHT,\r\n  payload: flight\r\n});\r\n\r\n/* Reducer */\r\n\r\nexport const initialFlightsState: IFlightsState = {\r\n  from: null,\r\n  to: null,\r\n  date: new Date(Date.now()),\r\n  timeRange: [0, 2400],\r\n  selectedFlight: null,\r\n  flights: []\r\n};\r\n\r\nexport const flightsReducer = (\r\n  state = initialFlightsState,\r\n  action: FlightsActionType\r\n) => {\r\n  switch (action.type) {\r\n    case SET_FROM:\r\n      return {\r\n        ...state,\r\n        from: action.payload\r\n      };\r\n    case SET_TO:\r\n      return {\r\n        ...state,\r\n        to: action.payload\r\n      };\r\n    case SET_DATE:\r\n      return {\r\n        ...state,\r\n        date: action.payload\r\n      };\r\n    case SET_TIME_RANGE:\r\n      return {\r\n        ...state,\r\n        timeRange: action.payload\r\n      };\r\n    case SET_SELECTED_FLIGHT:\r\n      return {\r\n        ...state,\r\n        selectedFlight: action.payload\r\n      };\r\n    case SET_FLIGHTS:\r\n      return {\r\n        ...state,\r\n        flights: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Grid, Button, Slider, Typography } from \"@material-ui/core\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { IAirport, IFlight } from \"../../interfaces\";\r\nimport AirportSearchInput from \"./AirportSearchInput\";\r\nimport FlightsTable from \"./FlightsTable\";\r\nimport queryFlights from \"../../API/queryFlights\";\r\nimport { RootState } from \"../../Redux\";\r\nimport {\r\n  setTo,\r\n  setFrom,\r\n  setDate,\r\n  setTimeRange,\r\n  setSelectedFlight,\r\n  setFlights\r\n} from \"../../Redux/flights\";\r\n\r\nconst formatTime = (time: number) => {\r\n  if (time === 0 || time === 2400) return \"12am\";\r\n  else if (time > 1200) return `${(time / 100) % 12}pm`;\r\n  else return `${time / 100}am`;\r\n};\r\n\r\nconst useFlights = () => {\r\n  const dispatch = useDispatch();\r\n  return useSelector((state: RootState) => ({\r\n    from: state.flights.from,\r\n    to: state.flights.to,\r\n    date: state.flights.date,\r\n    timeRange: state.flights.timeRange,\r\n    selectedFlight: state.flights.selectedFlight,\r\n    flights: state.flights.flights,\r\n    handleToChange: (airport: IAirport | null) => dispatch(setTo(airport)),\r\n    handleFromChange: (airport: IAirport | null) => dispatch(setFrom(airport)),\r\n    handleDateChange: (date: Date | null) => dispatch(setDate(date)),\r\n    handleTimeRangeChange: (timeRange: number[]) =>\r\n      dispatch(setTimeRange(timeRange)),\r\n    handleSelectFlight: (flight: IFlight | null) =>\r\n      dispatch(setSelectedFlight(flight)),\r\n    setFlights: (flights: IFlight[]) => dispatch(setFlights(flights))\r\n  }));\r\n};\r\n\r\nconst Flights = () => {\r\n  const [loading, setLoading] = React.useState<boolean>(false);\r\n  const {\r\n    from,\r\n    to,\r\n    date,\r\n    timeRange,\r\n    selectedFlight,\r\n    flights,\r\n    handleToChange,\r\n    handleFromChange,\r\n    handleDateChange,\r\n    handleTimeRangeChange,\r\n    handleSelectFlight,\r\n    setFlights\r\n  } = useFlights();\r\n\r\n  const query = React.useCallback(async () => {\r\n    if (from === null || to === null || date === null) return;\r\n\r\n    setLoading(true);\r\n    setFlights(await queryFlights(from, to, date, timeRange[0], timeRange[1]));\r\n    setLoading(false);\r\n  }, [from, to, date, timeRange, setFlights]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3} justify=\"space-evenly\">\r\n        <Grid item xs={12} sm={6}>\r\n          <AirportSearchInput\r\n            value={from}\r\n            handleChange={handleFromChange}\r\n            label=\"Flying from\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <AirportSearchInput\r\n            value={to}\r\n            handleChange={handleToChange}\r\n            label=\"Destination\"\r\n          />\r\n        </Grid>\r\n\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <Grid item xs={12}>\r\n            <KeyboardDatePicker\r\n              required\r\n              label=\"Departing Date\"\r\n              inputVariant=\"outlined\"\r\n              value={date}\r\n              onChange={handleDateChange}\r\n              showTodayButton\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={8}\r\n            container\r\n            spacing={1}\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={2}>\r\n              <Typography variant=\"body2\" align=\"center\">\r\n                {formatTime(timeRange[0])}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={2} style={{ textAlign: \"center\" }}>\r\n              <AccessTimeIcon fontSize=\"small\" />\r\n            </Grid>\r\n\r\n            <Grid item xs={2}>\r\n              <Typography variant=\"body2\" align=\"center\">\r\n                {formatTime(timeRange[1])}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Slider\r\n              value={timeRange}\r\n              onChange={(event: any, newValue: number | number[]) =>\r\n                handleTimeRangeChange(newValue as number[])\r\n              }\r\n              step={100}\r\n              min={0}\r\n              max={2400}\r\n              marks={[\r\n                { value: 0, label: \"12am\" },\r\n                { value: 2400, label: \"12am\" }\r\n              ]}\r\n              valueLabelDisplay=\"auto\"\r\n              aria-labelledby=\"range-slider\"\r\n              getAriaValueText={formatTime}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={\r\n                loading ||\r\n                from === null ||\r\n                to === null ||\r\n                date === null ||\r\n                timeRange === null\r\n              }\r\n              onClick={() => query()}\r\n            >\r\n              Search\r\n            </Button>\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n\r\n        <Grid item xs={12}>\r\n          {(flights.length > 0 || selectedFlight !== null || loading) && (\r\n            <FlightsTable\r\n              data={flights}\r\n              selectedFlight={selectedFlight}\r\n              handleSelectFlight={handleSelectFlight}\r\n              loading={loading}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Flights;\r\n","import { IInformationState } from \"../interfaces\";\r\n\r\n/* Types */\r\n\r\nexport const SET_FIRST_NAME = \"SET_FIRST_NAME\";\r\nexport const SET_LAST_NAME = \"SET_LAST_NAME\";\r\nexport const SET_SO = \"SET_SO\";\r\n\r\ninterface SetFirstNameAction {\r\n  type: typeof SET_FIRST_NAME;\r\n  payload: string;\r\n}\r\n\r\ninterface SetLastNameAction {\r\n  type: typeof SET_LAST_NAME;\r\n  payload: string;\r\n}\r\n\r\ninterface SetSOAction {\r\n  type: typeof SET_SO;\r\n  payload: string;\r\n}\r\n\r\nexport type InformationActionType =\r\n  | SetFirstNameAction\r\n  | SetLastNameAction\r\n  | SetSOAction;\r\n\r\n/* Actions */\r\n\r\nexport const setFirstName = (fName: string) => ({\r\n  type: SET_FIRST_NAME,\r\n  payload: fName\r\n});\r\n\r\nexport const setLastName = (lName: string) => ({\r\n  type: SET_LAST_NAME,\r\n  payload: lName\r\n});\r\n\r\nexport const setSO = (so: string) => ({\r\n  type: SET_SO,\r\n  payload: so\r\n});\r\n\r\n/* Reducer */\r\n\r\nexport const initialInformationState: IInformationState = {\r\n  fName: null,\r\n  lName: null,\r\n  so: null\r\n};\r\n\r\nexport const informationReducer = (\r\n  state = initialInformationState,\r\n  action: InformationActionType\r\n) => {\r\n  switch (action.type) {\r\n    case SET_FIRST_NAME:\r\n      return {\r\n        ...state,\r\n        fName: action.payload\r\n      };\r\n    case SET_LAST_NAME:\r\n      return {\r\n        ...state,\r\n        lName: action.payload\r\n      };\r\n    case SET_SO:\r\n      return {\r\n        ...state,\r\n        so: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { RootState } from \"../../Redux\";\r\nimport { setFirstName, setLastName, setSO } from \"../../Redux/information\";\r\n\r\nconst useInformationPage = () => {\r\n  const dispatch = useDispatch();\r\n  return useSelector((state: RootState) => ({\r\n    fName: state.information.fName,\r\n    lName: state.information.lName,\r\n    so: state.information.so,\r\n    handleFirstNameChange: (event: any) =>\r\n      dispatch(\r\n        setFirstName(event.target.value === \"\" ? null : event.target.value)\r\n      ),\r\n    handleLastNameChange: (event: any) =>\r\n      dispatch(\r\n        setLastName(event.target.value === \"\" ? null : event.target.value)\r\n      ),\r\n    handleSOChange: (event: any) =>\r\n      dispatch(setSO(event.target.value === \"\" ? null : event.target.value))\r\n  }));\r\n};\r\n\r\nconst Information = () => {\r\n  const {\r\n    fName,\r\n    lName,\r\n    so,\r\n    handleFirstNameChange,\r\n    handleLastNameChange,\r\n    handleSOChange\r\n  } = useInformationPage();\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Your Information\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            label=\"First name\"\r\n            fullWidth\r\n            autoComplete=\"fname\"\r\n            value={fName || \"\"}\r\n            onChange={handleFirstNameChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            label=\"Last name\"\r\n            fullWidth\r\n            autoComplete=\"lname\"\r\n            value={lName || \"\"}\r\n            onChange={handleLastNameChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"so\"\r\n            name=\"so\"\r\n            label=\"SO\"\r\n            fullWidth\r\n            autoComplete=\"so\"\r\n            value={so || \"\"}\r\n            onChange={handleSOChange}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import React from \"react\";\r\nimport {\r\n  Chip,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableFooter,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Link,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\nimport { AirplanemodeActive } from \"@material-ui/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../../Redux\";\r\nimport { setStep } from \"../../Redux/system\";\r\n\r\ninterface IChip {\r\n  id: string;\r\n  label: string;\r\n  icon: any;\r\n  tooltip: string;\r\n}\r\n\r\ninterface IRow {\r\n  label: string;\r\n  items: IChip[];\r\n  total: number | undefined;\r\n  step: number;\r\n}\r\n\r\nconst useConfirmation = (): {\r\n  rows: IRow[];\r\n  setStep: (step: number) => void;\r\n} => {\r\n  const dispatch = useDispatch();\r\n  return useSelector((state: RootState) => {\r\n    const selectedFlight = state.flights.selectedFlight;\r\n\r\n    return {\r\n      rows: [\r\n        {\r\n          label: \"Flights\",\r\n          items:\r\n            selectedFlight !== null\r\n              ? [\r\n                  {\r\n                    label: `${selectedFlight.fromAirportCode} → ${selectedFlight.toAirportCode}`,\r\n                    icon: <AirplanemodeActive />,\r\n                    id: selectedFlight.id,\r\n                    tooltip: `${selectedFlight.stops} stop(s)`\r\n                  }\r\n                ]\r\n              : [],\r\n          total: selectedFlight?.fare,\r\n          step: 1\r\n        },\r\n        { label: \"Lodging\", items: [], total: undefined, step: 2 },\r\n        { label: \"Vehicles\", items: [], total: undefined, step: 3 }\r\n      ],\r\n      setStep: (step: number) => dispatch(setStep(step))\r\n    };\r\n  });\r\n};\r\n\r\nconst formatTotal = (total: number | undefined) =>\r\n  total?.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 2\r\n  }) || \"N/A\";\r\n\r\nconst Confirmation = () => {\r\n  const { rows, setStep } = useConfirmation();\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Typography variant=\"h6\" style={{ margin: \"1rem 1rem 1rem 2rem\" }}>\r\n        Totals\r\n      </Typography>\r\n\r\n      <Table>\r\n        <TableBody>\r\n          {rows.map(({ label, items, total, step }) => (\r\n            <TableRow key={label}>\r\n              <TableCell padding=\"checkbox\">\r\n                <Link\r\n                  component=\"button\"\r\n                  variant=\"body1\"\r\n                  onClick={() => setStep(step)}\r\n                >\r\n                  {label}\r\n                </Link>\r\n              </TableCell>\r\n              <TableCell>\r\n                {items.map(item => (\r\n                  <Tooltip title={item.tooltip}>\r\n                    <Chip\r\n                      key={item.id}\r\n                      label={item.label}\r\n                      icon={item.icon}\r\n                      clickable\r\n                      color=\"primary\"\r\n                    />\r\n                  </Tooltip>\r\n                ))}\r\n              </TableCell>\r\n              <TableCell padding=\"checkbox\" align=\"right\">\r\n                {formatTotal(total)}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell></TableCell>\r\n            <TableCell></TableCell>\r\n            <TableCell align=\"right\" padding=\"checkbox\">\r\n              {rows\r\n                .reduce((grandTotal, { total }) => grandTotal + (total || 0), 0)\r\n                .toLocaleString(\"en-US\", {\r\n                  style: \"currency\",\r\n                  currency: \"USD\",\r\n                  minimumFractionDigits: 2\r\n                })}\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow></TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"@material-ui/core\";\nimport { RootState } from \"./Redux/index\";\nimport { setStep } from \"./Redux/system\";\nimport Flights from \"./Components/Flights/Flights\";\nimport Information from \"./Components/Information/Information\";\nimport Confirmation from \"./Components/Confirmation/Confirmation\";\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3)\n    }\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5)\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst useApp = () => {\n  const dispatch = useDispatch();\n  return useSelector((state: RootState) => ({\n    step: state.system.step,\n    handleNext: () => dispatch(setStep(state.system.step + 1)),\n    handleBack: () => dispatch(setStep(state.system.step - 1))\n  }));\n};\n\nconst steps = [\n  \"Information\",\n  \"Flights\",\n  \"Lodging\",\n  \"Car Rentals\",\n  \"Confirmation\"\n];\n\nconst getStepContent = (step: number) => {\n  switch (step) {\n    case 0:\n      return <Information />;\n    case 1:\n      return <Flights />;\n    case 2:\n      return <div>Lodging</div>;\n    case 3:\n      return <div>Car Rentals</div>;\n    case 4:\n      return <Confirmation />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n};\n\nconst App = () => {\n  const classes = useStyles();\n  const { step, handleBack, handleNext } = useApp();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Flight Finder\n          </Typography>\n          {process.env.NODE_ENV === \"development\" && (\n            <Button onClick={() => localStorage.clear()}>\n              Clear Local Storage\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Book Flights\n          </Typography>\n          <Stepper activeStep={step} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {step === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. We have emailed your order\n                  confirmation, and will send you an update when your order has\n                  shipped.\n                </Typography>\n                <div className={classes.buttons}>\n                  <Button onClick={handleBack} className={classes.button}>\n                    Back\n                  </Button>\n                </div>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(step)}\n                <div className={classes.buttons}>\n                  {step !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {step === steps.length - 1 ? \"Send Estimate\" : \"Next\"}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {\"Powered By \"}\n          <Link color=\"inherit\" href=\"https://www.certify.com/\">\n            Certify Travel\n          </Link>\n        </Typography>\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import { combineReducers, createStore, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport persistState from \"redux-localstorage\";\r\nimport { systemReducer } from \"./system\";\r\nimport { flightsReducer } from \"./flights\";\r\nimport { informationReducer } from \"./information\";\r\n\r\nconst rootReducer = combineReducers({\r\n  system: systemReducer,\r\n  flights: flightsReducer,\r\n  information: informationReducer\r\n});\r\n\r\nconst enhancer: any = compose(composeWithDevTools(), persistState());\r\n\r\nexport const store = createStore(rootReducer, undefined, enhancer);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./Redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}