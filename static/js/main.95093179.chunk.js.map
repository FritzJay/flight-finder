{"version":3,"sources":["types.tsx","Redux/system.ts","Components/NavbarList/NavbarList.tsx","Redux/settings.ts","Components/Settings/Averages.tsx","Components/Settings/Times.tsx","API/queryBases.ts","Components/CreateEstimate/BaseAutocomplete.tsx","Components/Settings/Settings.tsx","Redux/createEstimate.ts","Redux/flights.ts","API/queryFlights.ts","utility.ts","hooks/flights.ts","Components/Updates/Updates.tsx","Components/CreateEstimate/CreateEstimate.tsx","Components/Flights/Flights.tsx","App.tsx","Redux/index.ts","index.tsx"],"names":["Links","addLoadingLink","link","type","payload","removeLoadingLink","setDrawerOpen","isOpen","setSettingsOpen","setCalculating","isCalculating","initialState","selectedLink","CreateEstimate","activeLinks","loadingLinks","isDrawerOpen","isSettingsOpen","useStyles","makeStyles","createStyles","icon","position","alignSelf","marginLeft","iconProgress","listItems","Icon","FlightsIcon","label","Flights","LodgingIcon","Lodging","VehiclesIcon","Vehicles","NavbarList","dispatch","useDispatch","classes","useSelector","state","system","handleSelectLink","setSelectedLink","useNavbarList","List","ListItem","button","divider","selected","onClick","ListItemIcon","className","ListItemText","primary","map","key","disabled","includes","Fragment","CircularProgress","size","setDeparture","base","initialSettingsState","departure","averages","flights","lodging","vehicles","times","Averages","settings","handleChange","event","target","name","checked","setAveragesLodging","setAveragesVehicles","Error","useAverages","error","FormControl","component","formControl","FormLabel","required","FormGroup","FormControlLabel","control","Checkbox","onChange","FormHelperText","Times","handleAddTime","t","undefined","handleRemoveTime","useTimes","length","toString","queryBases","a","fetch","process","response","json","BaseAutocomplete","value","useState","loading","setLoading","options","setOptions","useEffect","then","bases","catch","err","console","_","newValue","useBaseAutoComplete","Autocomplete","id","autoComplete","disableClearable","selectOnFocus","getOptionLabel","option","renderInput","params","TextField","variant","theme","margin","spacing","background","palette","paper","height","Settings","open","handleClose","handleBaseChange","useSettings","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","Button","color","initialCreateEstimateState","destination","email","setFlightsBatch","time","addFlightsUpdate","description","date","Date","now","toUTCString","initialFlightsState","batches","updates","queryFlights","from","to","formatFlightQueryParameters","toLocaleDateString","replace","getFutureDate","daysFromNow","setDate","getDate","calculateFlights","log","dateString","padding","display","overflow","flexDirection","progress","width","hidden","visibility","Updates","useUpdates","secondsAgo","update","seconds","Math","abs","getSeconds","floor","getTimeStringSinceDate","Grid","item","xs","Paper","Typography","LinearProgress","clsx","TableContainer","Table","aria-label","TableBody","i","TableRow","TableCell","colSpan","align","textField","useCreateEstimate","calculateEstimate","createEstimate","useCalculateFlights","handleExecute","handleEmailChange","e","container","sm","justify","startIcon","maxHeight","React","tab","setTab","handleTabChange","useFlights","Object","keys","ListSubheader","flight","root","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","paddingTop","paddingBottom","fixedHeight","Dashboard","handleDrawerOpen","handleDrawerClose","handleToggleSettings","useDashboard","CssBaseline","AppBar","Toolbar","IconButton","edge","noWrap","Tooltip","Drawer","Divider","Container","getContent","Box","pt","Link","href","rootReducer","combineReducers","action","concat","filter","l","store","createStore","composeWithDevTools","persistState","spokaneBase","find","b","airportCode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95093179.chunk.js","sourcesContent":["export enum Links {\r\n  CreateEstimate,\r\n  Flights,\r\n  Lodging,\r\n  Vehicles,\r\n}\r\n\r\nexport interface IBase {\r\n  id: number;\r\n  name: string;\r\n  airport: string;\r\n  airportCode: string;\r\n  distance: number | null;\r\n  notes: string | null;\r\n}\r\n\r\nexport interface IAirport {\r\n  name: string;\r\n  code: string;\r\n  city: string;\r\n  locID: string;\r\n}\r\n\r\nexport interface IFlightsBatches {\r\n  [time: string]: IFlight[];\r\n}\r\n\r\nexport interface IFlight {\r\n  id: string;\r\n  airline: string;\r\n  grade: string;\r\n  duration: number;\r\n  stops: number;\r\n  fare: number;\r\n  cabin: string;\r\n  fromAirportCode: string;\r\n  toAirportCode: string;\r\n}\r\n\r\nexport interface IUpdate {\r\n  date: string;\r\n  description: string;\r\n}\r\n\r\n/* Redux */\r\n\r\nexport interface ISystemState {\r\n  selectedLink: number;\r\n  activeLinks: Links[];\r\n  loadingLinks: Links[];\r\n  isDrawerOpen: boolean;\r\n  isSettingsOpen: boolean;\r\n  isCalculating: boolean;\r\n}\r\n\r\nexport interface IAverages {\r\n  flights: boolean;\r\n  lodging: boolean;\r\n  vehicles: boolean;\r\n}\r\n\r\nexport interface ISettingsState {\r\n  departure: IBase | null;\r\n  averages: IAverages;\r\n  times: number[];\r\n}\r\n\r\nexport interface ICreateEstimateState {\r\n  destination: IBase | null;\r\n  email: string | null;\r\n}\r\n\r\nexport interface IFlightsState {\r\n  updates: IUpdate[];\r\n  batches: IFlightsBatches;\r\n}\r\n","import { ISystemState, Links } from \"../types\";\r\n\r\n/* Types */\r\n\r\nexport const SET_SELECTED_LINK = \"SET_SELECTED_LINK\";\r\nexport const ADD_ACTIVE_LINK = \"ADD_ACTIVE_LINK\";\r\nexport const REMOVE_ACTIVE_LINK = \"REMOVE_ACTIVE_LINK\";\r\nexport const ADD_LOADING_LINK = \"ADD_LOADING_LINK\";\r\nexport const REMOVE_LOADING_LINK = \"REMOVE_LOADING_LINK\";\r\nexport const SET_DRAWER_OPEN = \"SET_DRAWER_OPEN\";\r\nexport const SET_SETTINGS_OPEN = \"SET_SETTINGS_OPEN\";\r\nexport const SET_CALCULATING = \"SET_CALCULATING\";\r\n\r\ninterface SetSelectedLinkAction {\r\n  type: typeof SET_SELECTED_LINK;\r\n  payload: number;\r\n}\r\n\r\ninterface AddActiveLinkAction {\r\n  type: typeof ADD_ACTIVE_LINK;\r\n  payload: Links;\r\n}\r\n\r\ninterface RemoveActiveLinkAction {\r\n  type: typeof REMOVE_ACTIVE_LINK;\r\n  payload: Links;\r\n}\r\n\r\ninterface AddLoadingLinkAction {\r\n  type: typeof ADD_LOADING_LINK;\r\n  payload: Links;\r\n}\r\n\r\ninterface RemoveLoadingLinkAction {\r\n  type: typeof REMOVE_LOADING_LINK;\r\n  payload: Links;\r\n}\r\n\r\ninterface SetDrawerOpenAction {\r\n  type: typeof SET_DRAWER_OPEN;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetSettingsOpenAction {\r\n  type: typeof SET_SETTINGS_OPEN;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetCalculatingAction {\r\n  type: typeof SET_CALCULATING;\r\n  payload: boolean;\r\n}\r\n\r\nexport type SystemActionTypes =\r\n  | SetSelectedLinkAction\r\n  | SetDrawerOpenAction\r\n  | AddActiveLinkAction\r\n  | RemoveActiveLinkAction\r\n  | AddLoadingLinkAction\r\n  | RemoveLoadingLinkAction\r\n  | SetSettingsOpenAction\r\n  | SetCalculatingAction;\r\n\r\n/* Actions */\r\n\r\nexport const setSelectedLink = (link: Links) => ({\r\n  type: SET_SELECTED_LINK,\r\n  payload: link,\r\n});\r\n\r\nexport const addActiveLink = (link: Links) => ({\r\n  type: ADD_ACTIVE_LINK,\r\n  payload: link,\r\n});\r\n\r\nexport const removeActiveLink = (link: Links) => ({\r\n  type: REMOVE_ACTIVE_LINK,\r\n  payload: link,\r\n});\r\n\r\nexport const addLoadingLink = (link: Links) => ({\r\n  type: ADD_LOADING_LINK,\r\n  payload: link,\r\n});\r\n\r\nexport const removeLoadingLink = (link: Links) => ({\r\n  type: REMOVE_LOADING_LINK,\r\n  payload: link,\r\n});\r\n\r\nexport const setDrawerOpen = (isOpen: boolean) => ({\r\n  type: SET_DRAWER_OPEN,\r\n  payload: isOpen,\r\n});\r\n\r\nexport const setSettingsOpen = (isOpen: boolean) => ({\r\n  type: SET_SETTINGS_OPEN,\r\n  payload: isOpen,\r\n});\r\n\r\nexport const setCalculating = (isCalculating: boolean) => ({\r\n  type: SET_CALCULATING,\r\n  payload: isCalculating,\r\n});\r\n\r\n/* Reducer */\r\n\r\nconst initialState: ISystemState = {\r\n  selectedLink: Links.CreateEstimate,\r\n  activeLinks: [Links.CreateEstimate],\r\n  loadingLinks: [],\r\n  isDrawerOpen: true,\r\n  isSettingsOpen: false,\r\n  isCalculating: false,\r\n};\r\n\r\nexport const systemReducer = (\r\n  state = initialState,\r\n  action: SystemActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_SELECTED_LINK:\r\n      return {\r\n        ...state,\r\n        selectedLink: action.payload,\r\n      };\r\n    case ADD_ACTIVE_LINK:\r\n      return {\r\n        ...state,\r\n        activeLinks: state.activeLinks.includes(action.payload)\r\n          ? state.activeLinks\r\n          : state.activeLinks.concat([action.payload]),\r\n      };\r\n    case REMOVE_ACTIVE_LINK:\r\n      return {\r\n        ...state,\r\n        activeLinks: state.activeLinks.filter((l) => l !== action.payload),\r\n      };\r\n    case ADD_LOADING_LINK:\r\n      return {\r\n        ...state,\r\n        loadingLinks: state.loadingLinks.includes(action.payload)\r\n          ? state.loadingLinks\r\n          : state.loadingLinks.concat([action.payload]),\r\n      };\r\n    case REMOVE_LOADING_LINK:\r\n      return {\r\n        ...state,\r\n        loadingLinks: state.loadingLinks.filter((l) => l !== action.payload),\r\n      };\r\n    case SET_DRAWER_OPEN:\r\n      return {\r\n        ...state,\r\n        isDrawerOpen: action.payload,\r\n      };\r\n    case SET_SETTINGS_OPEN:\r\n      return {\r\n        ...state,\r\n        isSettingsOpen: action.payload,\r\n      };\r\n    case SET_CALCULATING:\r\n      return {\r\n        ...state,\r\n        isCalculating: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport FlightsIcon from \"@material-ui/icons/Flight\";\r\nimport LodgingIcon from \"@material-ui/icons/Hotel\";\r\nimport VehiclesIcon from \"@material-ui/icons/DriveEta\";\r\nimport { Links } from \"../../types\";\r\nimport { RootState } from \"../../Redux/index\";\r\nimport { setSelectedLink } from \"../../Redux/system\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    icon: {\r\n      position: \"absolute\",\r\n      alignSelf: \"center\",\r\n      marginLeft: \"3px\",\r\n    },\r\n    iconProgress: {\r\n      position: \"absolute\",\r\n      alignSelf: \"center\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface IListItem {\r\n  Icon: any;\r\n  label: string;\r\n  link: Links;\r\n}\r\n\r\nconst listItems: IListItem[] = [\r\n  { Icon: FlightsIcon, label: \"Flights\", link: Links.Flights },\r\n  { Icon: LodgingIcon, label: \"Lodging\", link: Links.Lodging },\r\n  { Icon: VehiclesIcon, label: \"Vehicles\", link: Links.Vehicles },\r\n];\r\n\r\nconst useNavbarList = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  return useSelector((state: RootState) => ({\r\n    classes,\r\n    selectedLink: state.system.selectedLink,\r\n    activeLinks: state.system.activeLinks,\r\n    loadingLinks: state.system.loadingLinks,\r\n    handleSelectLink: (link: Links) => dispatch(setSelectedLink(link)),\r\n  }));\r\n};\r\n\r\nconst NavbarList = () => {\r\n  const {\r\n    classes,\r\n    selectedLink,\r\n    activeLinks,\r\n    loadingLinks,\r\n    handleSelectLink,\r\n  } = useNavbarList();\r\n\r\n  return (\r\n    <List>\r\n      <ListItem\r\n        button\r\n        divider\r\n        selected={selectedLink === Links.CreateEstimate}\r\n        onClick={() => handleSelectLink(Links.CreateEstimate)}\r\n      >\r\n        <ListItemIcon>\r\n          <BusinessIcon className={classes.icon} />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Create Estimate\" />\r\n      </ListItem>\r\n\r\n      {listItems.map(({ label, Icon, link }) => (\r\n        <ListItem\r\n          key={label}\r\n          button\r\n          selected={selectedLink === link}\r\n          disabled={!activeLinks.includes(link)}\r\n          onClick={() => handleSelectLink(link)}\r\n        >\r\n          <ListItemIcon>\r\n            <React.Fragment>\r\n              <Icon className={classes.icon} />\r\n              {loadingLinks.includes(link) && (\r\n                <CircularProgress size={29} className={classes.iconProgress} />\r\n              )}\r\n            </React.Fragment>\r\n          </ListItemIcon>\r\n          <ListItemText primary={label} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default NavbarList;\r\n","import { ISettingsState, IBase } from \"../types\";\r\n\r\n/* Types */\r\n\r\nexport const SET_AVERAGES_FLIGHTS = \"SET_AVERAGES_FLIGHTS\";\r\nexport const SET_AVERAGES_LODGING = \"SET_AVERAGES_LODGING\";\r\nexport const SET_AVERAGES_VEHICLES = \"SET_AVERAGES_VEHICLES\";\r\nexport const ADD_TIME = \"ADD_TIME\";\r\nexport const REMOVE_TIME = \"REMOVE_TIME\";\r\nexport const SET_DEPARTURE = \"SET_DEPARTURE\";\r\n\r\ninterface SetAveragesFlightsAction {\r\n  type: typeof SET_AVERAGES_FLIGHTS;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetAveragesLodgingAction {\r\n  type: typeof SET_AVERAGES_LODGING;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetAveragesVehiclesAction {\r\n  type: typeof SET_AVERAGES_VEHICLES;\r\n  payload: boolean;\r\n}\r\n\r\ninterface AddTimeAction {\r\n  type: typeof ADD_TIME;\r\n  payload: number;\r\n}\r\n\r\ninterface RemoveTimeAction {\r\n  type: typeof REMOVE_TIME;\r\n  payload: number;\r\n}\r\n\r\ninterface SetDepartureAction {\r\n  type: typeof SET_DEPARTURE;\r\n  payload: IBase | null;\r\n}\r\n\r\nexport type SettingsActionType =\r\n  | SetAveragesFlightsAction\r\n  | SetAveragesLodgingAction\r\n  | SetAveragesVehiclesAction\r\n  | AddTimeAction\r\n  | RemoveTimeAction\r\n  | SetDepartureAction;\r\n\r\n/* Actions */\r\n\r\nexport const setAveragesFlights = (flight: boolean) => ({\r\n  type: SET_AVERAGES_FLIGHTS,\r\n  payload: flight,\r\n});\r\n\r\nexport const setAveragesLodging = (lodging: boolean) => ({\r\n  type: SET_AVERAGES_LODGING,\r\n  payload: lodging,\r\n});\r\n\r\nexport const setAveragesVehicles = (vehicles: boolean) => ({\r\n  type: SET_AVERAGES_VEHICLES,\r\n  payload: vehicles,\r\n});\r\n\r\nexport const addTime = (time: number) => ({\r\n  type: ADD_TIME,\r\n  payload: time,\r\n});\r\n\r\nexport const removeTime = (time: number) => ({\r\n  type: REMOVE_TIME,\r\n  payload: time,\r\n});\r\n\r\nexport const setDeparture = (base: IBase | null) => ({\r\n  type: SET_DEPARTURE,\r\n  payload: base,\r\n});\r\n\r\n/* Reducer */\r\n\r\nexport const initialSettingsState: ISettingsState = {\r\n  departure: null,\r\n  averages: {\r\n    flights: true,\r\n    lodging: true,\r\n    vehicles: true,\r\n  },\r\n  times: [0, 7, 14],\r\n};\r\n\r\nexport const settingsReducer = (\r\n  state = initialSettingsState,\r\n  action: SettingsActionType\r\n) => {\r\n  switch (action.type) {\r\n    case SET_AVERAGES_FLIGHTS:\r\n      return {\r\n        ...state,\r\n        averages: {\r\n          ...state.averages,\r\n          flights: action.payload,\r\n        },\r\n      };\r\n    case SET_AVERAGES_LODGING:\r\n      return {\r\n        ...state,\r\n        averages: {\r\n          ...state.averages,\r\n          lodging: action.payload,\r\n        },\r\n      };\r\n    case SET_AVERAGES_VEHICLES:\r\n      return {\r\n        ...state,\r\n        averages: {\r\n          ...state.averages,\r\n          vehicles: action.payload,\r\n        },\r\n      };\r\n    case ADD_TIME:\r\n      return {\r\n        ...state,\r\n        times: state.times.includes(action.payload)\r\n          ? state.times\r\n          : state.times.concat([action.payload]),\r\n      };\r\n    case REMOVE_TIME:\r\n      return {\r\n        ...state,\r\n        times: state.times.filter((t) => t !== action.payload),\r\n      };\r\n    case SET_DEPARTURE:\r\n      return {\r\n        ...state,\r\n        departure: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  FormLabel,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { RootState } from \"../../Redux\";\r\nimport {\r\n  setAveragesFlights,\r\n  setAveragesLodging,\r\n  setAveragesVehicles,\r\n} from \"../../Redux/settings\";\r\n\r\nconst useAverages = () => {\r\n  const dispatch = useDispatch();\r\n  return useSelector(\r\n    ({\r\n      settings: {\r\n        averages: { flights, lodging, vehicles },\r\n      },\r\n    }: RootState) => ({\r\n      flights,\r\n      lodging,\r\n      vehicles,\r\n      handleChange: (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        switch (event.target.name) {\r\n          case \"flights\":\r\n            return dispatch(setAveragesFlights(event.target.checked));\r\n          case \"lodging\":\r\n            return dispatch(setAveragesLodging(event.target.checked));\r\n          case \"vehicles\":\r\n            return dispatch(setAveragesVehicles(event.target.checked));\r\n          default:\r\n            throw new Error(\"Invalid checkbox name.\");\r\n        }\r\n      },\r\n    })\r\n  );\r\n};\r\n\r\nconst Averages = ({ classes }: { classes: any }) => {\r\n  const { flights, lodging, vehicles, handleChange } = useAverages();\r\n  const error = !flights && !lodging && !vehicles;\r\n\r\n  return (\r\n    <FormControl\r\n      component=\"fieldset\"\r\n      error={error}\r\n      className={classes.formControl}\r\n    >\r\n      <FormLabel required component=\"legend\">\r\n        Calculate Averages For\r\n      </FormLabel>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={flights}\r\n              onChange={handleChange}\r\n              name=\"flights\"\r\n            />\r\n          }\r\n          label=\"Flights\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={lodging}\r\n              onChange={handleChange}\r\n              name=\"lodging\"\r\n            />\r\n          }\r\n          label=\"Lodging\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={vehicles}\r\n              onChange={handleChange}\r\n              name=\"vehicles\"\r\n            />\r\n          }\r\n          label=\"Vehicles\"\r\n        />\r\n      </FormGroup>\r\n      <FormHelperText>{error && \"Select at least one\"}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Averages;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  FormLabel,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { RootState } from \"../../Redux\";\r\nimport { addTime, removeTime } from \"../../Redux/settings\";\r\n\r\nconst useTimes = () => {\r\n  const dispatch = useDispatch();\r\n  return useSelector(({ settings: { times } }: RootState) => ({\r\n    times,\r\n    handleAddTime: (t: number | undefined) =>\r\n      t !== undefined && dispatch(addTime(t)),\r\n    handleRemoveTime: (t: number | undefined) =>\r\n      t !== undefined && dispatch(removeTime(t)),\r\n  }));\r\n};\r\n\r\nconst Times = ({ classes }: { classes: any }) => {\r\n  const { times, handleAddTime, handleRemoveTime } = useTimes();\r\n  const error = times.length <= 0;\r\n\r\n  return (\r\n    <FormControl\r\n      component=\"fieldset\"\r\n      error={error}\r\n      className={classes.formControl}\r\n    >\r\n      <FormLabel required component=\"legend\">\r\n        Calculate Averages At\r\n      </FormLabel>\r\n      <FormGroup>\r\n        {[0, 7, 14, 30, 60].map((t) => (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={times.includes(t)}\r\n                onChange={() =>\r\n                  times.includes(t) ? handleRemoveTime(t) : handleAddTime(t)\r\n                }\r\n                name={t.toString()}\r\n              />\r\n            }\r\n            label={`${t} days from now`}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n      <FormHelperText>{error && \"Select at least one\"}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Times;\r\n","import { IBase } from \"../types\";\r\n\r\nexport const queryBases = async (): Promise<IBase[]> => {\r\n  const response = await fetch(process.env.REACT_APP_API_URL + `/bases`);\r\n  return (await response.json()) as IBase[];\r\n};\r\n\r\nexport default queryBases;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { IBase } from \"../../types\";\r\nimport { RootState } from \"../../Redux\";\r\nimport { queryBases } from \"../../API/queryBases\";\r\n\r\nconst useBaseAutoComplete = (onChange: (base: IBase | null) => any) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [options, setOptions] = useState<IBase[]>([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    queryBases()\r\n      .then((bases) => {\r\n        setOptions(bases);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return useSelector((state: RootState) => ({\r\n    options,\r\n    loading,\r\n    handleChange: (_: any, newValue: IBase | null) => onChange(newValue),\r\n  }));\r\n};\r\n\r\nexport const BaseAutocomplete = ({\r\n  label,\r\n  onChange,\r\n  value,\r\n}: {\r\n  label: string;\r\n  onChange: (base: IBase | null) => any;\r\n  value: IBase | null;\r\n}) => {\r\n  const { loading, options, handleChange } = useBaseAutoComplete(onChange);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"bases-combo-box\"\r\n      autoComplete={true}\r\n      disableClearable={true}\r\n      loading={loading}\r\n      options={options}\r\n      selectOnFocus={true}\r\n      value={value}\r\n      onChange={handleChange}\r\n      getOptionLabel={(option) => option.name}\r\n      renderInput={(params) => (\r\n        <TextField {...params} label={label} variant=\"outlined\" />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BaseAutocomplete;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { IBase } from \"../../types\";\r\nimport { RootState } from \"../../Redux\";\r\nimport { setSettingsOpen } from \"../../Redux/system\";\r\nimport { setDeparture } from \"../../Redux/settings\";\r\nimport Averages from \"./Averages\";\r\nimport Times from \"./Times\";\r\nimport BaseAutocomplete from \"../CreateEstimate/BaseAutocomplete\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(3),\r\n      background: theme.palette.background.paper,\r\n    },\r\n    button: {\r\n      height: \"100%\",\r\n    },\r\n  })\r\n);\r\n\r\nconst useSettings = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  return useSelector((state: RootState) => ({\r\n    classes,\r\n    open: state.system.isSettingsOpen,\r\n    departure: state.settings.departure,\r\n    handleClose: () => dispatch(setSettingsOpen(false)),\r\n    handleBaseChange: (base: IBase | null) => dispatch(setDeparture(base)),\r\n  }));\r\n};\r\n\r\nconst Settings = () => {\r\n  const {\r\n    classes,\r\n    open,\r\n    departure,\r\n    handleClose,\r\n    handleBaseChange,\r\n  } = useSettings();\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"Settings\"\r\n      aria-describedby=\"Specify the types and methods of calculations.\"\r\n    >\r\n      <DialogTitle>Settings</DialogTitle>\r\n      <DialogContent>\r\n        <BaseAutocomplete\r\n          label=\"Default Departure\"\r\n          value={departure}\r\n          onChange={handleBaseChange}\r\n        />\r\n\r\n        <Averages classes={classes} />\r\n\r\n        <Times classes={classes} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { IBase, ICreateEstimateState } from \"../types\";\r\n\r\n/* Types */\r\n\r\nexport const SET_DESTINATION = \"SET_DESTINATION\";\r\nexport const SET_EMAIL = \"SET_EMAIL\";\r\n\r\ninterface SetDestinationAction {\r\n  type: typeof SET_DESTINATION;\r\n  payload: IBase | null;\r\n}\r\n\r\ninterface SetEmailAction {\r\n  type: typeof SET_EMAIL;\r\n  payload: string | null;\r\n}\r\n\r\nexport type CreateEstimateActionTypes = SetDestinationAction | SetEmailAction;\r\n\r\n/* Actions */\r\n\r\nexport const setDestination = (destination: IBase | null) => ({\r\n  type: SET_DESTINATION,\r\n  payload: destination,\r\n});\r\n\r\nexport const setEmail = (email: string | null) => ({\r\n  type: SET_EMAIL,\r\n  payload: email,\r\n});\r\n\r\n/* Reducer */\r\n\r\nexport const initialCreateEstimateState: ICreateEstimateState = {\r\n  destination: null,\r\n  email: null,\r\n};\r\n\r\nexport const createEstimateReducer = (\r\n  state = initialCreateEstimateState,\r\n  action: CreateEstimateActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_DESTINATION:\r\n      return {\r\n        ...state,\r\n        destination: action.payload,\r\n      };\r\n    case SET_EMAIL:\r\n      return {\r\n        ...state,\r\n        email: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IFlightsState, IFlight, IUpdate } from \"../types\";\r\n\r\n/* Types */\r\n\r\nexport const SET_FLIGHTS_BATCH = \"SET_FLIGHTS_BATCH\";\r\nexport const ADD_FLIGHTS_UPDATE = \"ADD_FLIGHTS_UPDATE\";\r\nexport const CLEAR_FLIGHTS_UPDATES = \"CLEAR_FLIGHTS_UPDATES\";\r\n\r\ninterface SetFlightsBatchAction {\r\n  type: typeof SET_FLIGHTS_BATCH;\r\n  payload: {\r\n    time: number;\r\n    flights: IFlight[];\r\n  };\r\n}\r\n\r\ninterface AddFlightsUpdateAction {\r\n  type: typeof ADD_FLIGHTS_UPDATE;\r\n  payload: IUpdate;\r\n}\r\n\r\ninterface ClearFlightsUpdatesAction {\r\n  type: typeof CLEAR_FLIGHTS_UPDATES;\r\n}\r\n\r\nexport type FlightsActionType =\r\n  | SetFlightsBatchAction\r\n  | AddFlightsUpdateAction\r\n  | ClearFlightsUpdatesAction;\r\n\r\n/* Actions */\r\n\r\nexport const setFlightsBatch = (time: number, flights: IFlight[]) => ({\r\n  type: SET_FLIGHTS_BATCH,\r\n  payload: {\r\n    time: time.toString(),\r\n    flights,\r\n  },\r\n});\r\n\r\nexport const addFlightsUpdate = (description: string) => {\r\n  const date = new Date(Date.now());\r\n  return {\r\n    type: ADD_FLIGHTS_UPDATE,\r\n    payload: {\r\n      description,\r\n      date: date.toUTCString(),\r\n    },\r\n  };\r\n};\r\n\r\nexport const clearFlightsUpdates = () => ({\r\n  type: CLEAR_FLIGHTS_UPDATES,\r\n});\r\n\r\n/* Reducer */\r\n\r\nexport const initialFlightsState: IFlightsState = {\r\n  batches: {},\r\n  updates: [],\r\n};\r\n\r\nexport const flightsReducer = (\r\n  state = initialFlightsState,\r\n  action: FlightsActionType\r\n) => {\r\n  switch (action.type) {\r\n    case SET_FLIGHTS_BATCH:\r\n      return {\r\n        ...state,\r\n        batches: {\r\n          ...state.batches,\r\n          [action.payload.time]: action.payload.flights,\r\n        },\r\n      };\r\n    case ADD_FLIGHTS_UPDATE:\r\n      return {\r\n        ...state,\r\n        updates: state.updates.concat([action.payload]),\r\n      };\r\n    case CLEAR_FLIGHTS_UPDATES:\r\n      return {\r\n        ...state,\r\n        updates: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IBase } from \"../types\";\r\n\r\n// TODO: Accept array of flights\r\nexport const queryFlights = async (from: IBase, to: IBase, date: Date) => {\r\n  const response = await fetch(\r\n    process.env.REACT_APP_API_URL +\r\n      `/flights?${formatFlightQueryParameters(from, to, date)}`\r\n  );\r\n  return await response.json();\r\n};\r\n\r\nexport const formatFlightQueryParameters = (\r\n  from: IBase,\r\n  to: IBase,\r\n  date: Date\r\n) =>\r\n  `departureBaseId=${from.id}&arrivalBaseId=${\r\n    to.id\r\n  }&date=\"${date.toLocaleDateString().replace(/\\//g, \"-\")}`;\r\n\r\nexport default queryFlights;\r\n","export const formatTotal = (total: number | undefined) =>\r\n  total?.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 2,\r\n  }) || \"N/A\";\r\n\r\nexport const getFutureDate = (daysFromNow: number) => {\r\n  const date = new Date(Date.now());\r\n  date.setDate(date.getDate() + daysFromNow);\r\n  return date;\r\n};\r\n\r\nexport const getTimeStringSinceDate = (a: Date) => {\r\n  const seconds = Math.abs(a.getSeconds() - new Date(Date.now()).getSeconds());\r\n  if (seconds <= 0) return \"Less than a second ago\";\r\n  else if (seconds < 60) return `${seconds} seconds ago`;\r\n  else if (seconds < 60 * 60) return `${Math.floor(seconds / 60)} minutes ago`;\r\n  else if (seconds < 60 * 60 * 60)\r\n    return `${Math.floor((seconds / 60) * 60)} hours ago`;\r\n  else if (seconds < 60 * 60 * 60 * 24)\r\n    return `${Math.floor(seconds / (60 * 60 * 60 * 24))} days ago`;\r\n  else return \"A long long time ago\";\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IBase, Links } from \"../types\";\r\nimport { RootState } from \"../Redux\";\r\nimport {\r\n  removeLoadingLink,\r\n  addLoadingLink,\r\n  addActiveLink,\r\n  setCalculating,\r\n} from \"../Redux/system\";\r\nimport {\r\n  addFlightsUpdate,\r\n  setFlightsBatch,\r\n  clearFlightsUpdates,\r\n} from \"../Redux/flights\";\r\nimport { queryFlights } from \"../API/queryFlights\";\r\nimport { getFutureDate } from \"../utility\";\r\n\r\nexport const useCalculateFlights = () => {\r\n  const dispatch = useDispatch();\r\n  const { departure, destination, times } = useSelector((state: RootState) => ({\r\n    times: state.settings.times,\r\n    departure: state.settings.departure,\r\n    destination: state.createEstimate.destination,\r\n  }));\r\n\r\n  return async () => {\r\n    if (departure === null || destination === null) return;\r\n\r\n    dispatch(clearFlightsUpdates());\r\n    dispatch(setCalculating(true));\r\n    try {\r\n      await calculateFlights(dispatch, departure, destination, times);\r\n    } finally {\r\n      dispatch(setCalculating(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const calculateFlights = async (\r\n  dispatch: Dispatch<any>,\r\n  departure: IBase,\r\n  destination: IBase,\r\n  times: number[]\r\n) => {\r\n  console.log(\"Calculating flight averages for \" + times);\r\n  dispatch(addActiveLink(Links.Flights));\r\n  dispatch(addLoadingLink(Links.Flights));\r\n\r\n  for (const time of times) {\r\n    const date = getFutureDate(time);\r\n    const dateString = date.toLocaleDateString(\"us\");\r\n\r\n    dispatch(\r\n      addFlightsUpdate(`Gathering flight information for ${dateString}.`)\r\n    );\r\n\r\n    const flights = await queryFlights(departure, destination, date);\r\n    dispatch(setFlightsBatch(time, flights));\r\n\r\n    dispatch(\r\n      addFlightsUpdate(\r\n        `Found ${flights.length} potential flights on ${dateString}.`\r\n      )\r\n    );\r\n  }\r\n\r\n  dispatch(removeLoadingLink(Links.Flights));\r\n  console.log(\"Finished calculating flight averages for \" + times);\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { RootState } from \"../../Redux\";\r\nimport { IUpdate } from \"../../types\";\r\nimport { getTimeStringSinceDate } from \"../../utility\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  progress: {\r\n    width: \"100%\",\r\n  },\r\n  hidden: {\r\n    visibility: \"hidden\",\r\n  },\r\n}));\r\n\r\nconst useUpdates = () => {\r\n  const classes = useStyles();\r\n  return useSelector((state: RootState) => ({\r\n    classes,\r\n    loading: state.system.isCalculating,\r\n  }));\r\n};\r\n\r\nconst Updates = ({ updates }: { updates: IUpdate[] }) => {\r\n  const { classes, loading } = useUpdates();\r\n  const secondsAgo = updates.map((update) =>\r\n    getTimeStringSinceDate(new Date(update.date))\r\n  );\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Paper className={classes.paper}>\r\n        <Typography variant=\"h5\">Progress</Typography>\r\n\r\n        <LinearProgress\r\n          className={clsx(classes.progress, loading ? null : classes.hidden)}\r\n          variant=\"query\"\r\n        />\r\n\r\n        <TableContainer>\r\n          <Table aria-label=\"updates table\" size=\"small\">\r\n            <TableBody>\r\n              {updates.map(({ description, date }, i) => (\r\n                <TableRow key={date + description}>\r\n                  <TableCell colSpan={3}>{description}</TableCell>\r\n                  <TableCell align=\"right\">{secondsAgo[i]}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Updates;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { IBase } from \"../../types\";\r\nimport { RootState } from \"../../Redux\";\r\nimport { setDestination, setEmail } from \"../../Redux/createEstimate\";\r\nimport { useCalculateFlights } from \"../../hooks/flights\";\r\nimport BaseAutoComplete from \"./BaseAutocomplete\";\r\nimport Updates from \"../Updates/Updates\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst useCreateEstimate = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const calculateEstimate = useCalculateFlights();\r\n  return useSelector((state: RootState) => ({\r\n    classes,\r\n    isCalculating: state.system.isCalculating,\r\n    base: state.createEstimate.destination,\r\n    email: state.createEstimate.email,\r\n    updates: state.flights.updates,\r\n    handleBaseChange: (base: IBase | null) => dispatch(setDestination(base)),\r\n    handleExecute: calculateEstimate,\r\n    handleEmailChange: (e: any) =>\r\n      dispatch(setEmail(e.target.value === \"\" ? null : e.target.value)),\r\n  }));\r\n};\r\n\r\nconst CreateEstimate = () => {\r\n  const {\r\n    classes,\r\n    isCalculating,\r\n    base,\r\n    email,\r\n    updates,\r\n    handleBaseChange,\r\n    handleExecute,\r\n    handleEmailChange,\r\n  } = useCreateEstimate();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <Grid container item xs={12} spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h4\">Create Estimate</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <BaseAutoComplete\r\n                label=\"Select Base\"\r\n                value={base}\r\n                onChange={handleBaseChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                className={classes.textField}\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                value={email || \"\"}\r\n                onChange={handleEmailChange}\r\n              />\r\n            </Grid>\r\n            <Grid container spacing={1} justify=\"flex-end\" item xs={12}>\r\n              <Grid item>\r\n                <Button\r\n                  disabled={isCalculating}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleExecute}\r\n                  startIcon={\r\n                    isCalculating ? (\r\n                      <CircularProgress size={20} />\r\n                    ) : (\r\n                      <PlayArrowIcon />\r\n                    )\r\n                  }\r\n                >\r\n                  Create Estimate\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      {updates.length > 0 && <Updates updates={updates} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateEstimate;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { RootState } from \"../../Redux\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  flights: {\r\n    position: \"relative\",\r\n    overflow: \"auto\",\r\n    maxHeight: \"300px\",\r\n  },\r\n}));\r\n\r\nconst useFlights = () => {\r\n  const classes = useStyles();\r\n  const [tab, setTab] = React.useState(0);\r\n  return useSelector(({ flights }: RootState) => ({\r\n    classes,\r\n    batches: flights.batches,\r\n    tab,\r\n\r\n    handleTabChange: (_: any, value: number) => setTab(value),\r\n  }));\r\n};\r\nconst Flights = () => {\r\n  const { classes, tab, handleTabChange, batches } = useFlights();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(batches).map((time) => {\r\n        const flights = batches[time];\r\n\r\n        return (\r\n          <Grid item xs={6}>\r\n            <Paper className={classes.paper}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h4\">{time} days</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.flights}>\r\n                  <List aria-label=\"flights\">\r\n                    <ListSubheader color=\"primary\">Test</ListSubheader>\r\n                    {flights.map((flight) => (\r\n                      <ListItem>\r\n                        <ListItemText>{flight}</ListItemText>\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        );\r\n      })}\r\n\r\n      <Grid item xs={6}>\r\n        <Paper className={classes.paper}>\r\n          <Grid container item xs={12} spacing={3}>\r\n            <Typography variant=\"h4\">Flights</Typography>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Flights;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport NavbarList from \"./Components/NavbarList/NavbarList\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport CreateEstimate from \"./Components/CreateEstimate/CreateEstimate\";\r\nimport Flights from \"./Components/Flights/Flights\";\r\nimport { RootState } from \"./Redux\";\r\nimport { setDrawerOpen, setSettingsOpen } from \"./Redux/system\";\r\nimport { Links } from \"./types\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(6),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(8),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nconst getContent = (selectedLink: Links) => {\r\n  switch (selectedLink) {\r\n    case Links.CreateEstimate:\r\n      return <CreateEstimate />;\r\n    case Links.Flights:\r\n      return <Flights />;\r\n    case Links.Lodging:\r\n      return <div>Lodging</div>;\r\n    case Links.Vehicles:\r\n      return <div>Vehicles</div>;\r\n    default:\r\n      throw new Error(\"Invalid Link\");\r\n  }\r\n};\r\n\r\nconst useDashboard = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  return useSelector((state: RootState) => ({\r\n    classes,\r\n    open: state.system.isDrawerOpen,\r\n    selectedLink: state.system.selectedLink,\r\n    isCalculating: state.system.isCalculating,\r\n    handleDrawerOpen: () => dispatch(setDrawerOpen(true)),\r\n    handleDrawerClose: () => dispatch(setDrawerOpen(false)),\r\n    handleToggleSettings: () =>\r\n      dispatch(setSettingsOpen(!state.system.isSettingsOpen)),\r\n  }));\r\n};\r\n\r\nexport default function Dashboard() {\r\n  const {\r\n    classes,\r\n    open,\r\n    selectedLink,\r\n    isCalculating,\r\n    handleDrawerOpen,\r\n    handleDrawerClose,\r\n    handleToggleSettings,\r\n  } = useDashboard();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton\r\n            disabled={isCalculating}\r\n            onClick={handleToggleSettings}\r\n            color=\"inherit\"\r\n          >\r\n            <Tooltip title=\"Adjust settings\" aria-label=\"Adjust settings\">\r\n              <SettingsIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <NavbarList />\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {getContent(selectedLink)}\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n              {\"Created By \"}\r\n              <Link color=\"inherit\" href=\"https://github.com/FritzJay\">\r\n                Fritz Jay\r\n              </Link>\r\n              {\" 2020.\"}\r\n            </Typography>\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n      <Settings />\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport persistState from \"redux-localstorage\";\r\nimport { systemReducer } from \"./system\";\r\nimport { settingsReducer } from \"./settings\";\r\nimport { createEstimateReducer } from \"./createEstimate\";\r\nimport { flightsReducer } from \"./flights\";\r\n\r\nconst rootReducer = combineReducers({\r\n  system: systemReducer,\r\n  settings: settingsReducer,\r\n  createEstimate: createEstimateReducer,\r\n  flights: flightsReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  undefined,\r\n  composeWithDevTools(persistState() as any)\r\n);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { store } from \"./Redux\";\r\nimport { queryBases } from \"./API/queryBases\";\r\nimport { setDeparture } from \"./Redux/settings\";\r\n\r\n// Set default base\r\nqueryBases().then((bases) => {\r\n  const spokaneBase = bases.find((b) => b.airportCode === \"GEG\") || null;\r\n  store.dispatch(setDeparture(spokaneBase) as any);\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}